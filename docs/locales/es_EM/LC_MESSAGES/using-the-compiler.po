msgid ""
msgstr ""
"Project-Id-Version: solidity-test\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-13 16:47+0100\n"
"PO-Revision-Date: 2022-01-13 16:14\n"
"Last-Translator: \n"
"Language-Team: Spanish (Modern)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: solidity-test\n"
"X-Crowdin-Project-ID: 494285\n"
"X-Crowdin-Language: es-EM\n"
"X-Crowdin-File: using-the-compiler.po\n"
"X-Crowdin-File-ID: 9\n"
"Language: es_EM\n"

#: ../../using-the-compiler.rst:3 bb893e3482bb41b598ed59268cce5cf9
msgid "Using the Compiler"
msgstr ""

#: ../../using-the-compiler.rst:10 553930a0a6044c77943933677def3bd8
msgid "Using the Commandline Compiler"
msgstr ""

#: ../../using-the-compiler.rst:13 79805f7b30d14389b6f2751dac590374
msgid "This section does not apply to :ref:`solcjs <solcjs>`, not even if it is used in commandline mode."
msgstr ""

#: ../../using-the-compiler.rst:16 b95924e24e0c458985f0814d32638585
msgid "Basic Usage"
msgstr ""

#: ../../using-the-compiler.rst:18 589d60026687464cbb0148c9ba61509e
msgid "One of the build targets of the Solidity repository is ``solc``, the solidity commandline compiler. Using ``solc --help`` provides you with an explanation of all options. The compiler can produce various outputs, ranging from simple binaries and assembly over an abstract syntax tree (parse tree) to estimations of gas usage. If you only want to compile a single file, you run it as ``solc --bin sourceFile.sol`` and it will print the binary. If you want to get some of the more advanced output variants of ``solc``, it is probably better to tell it to output everything to separate files using ``solc -o outputDirectory --bin --ast-compact-json --asm sourceFile.sol``."
msgstr ""

#: ../../using-the-compiler.rst:23 ecd9e7716e6d4e3a9b40f877eb0acaab
msgid "Optimizer Options"
msgstr ""

#: ../../using-the-compiler.rst:25 7c3ee58a544442a6a8da4ea26aacb286
msgid "Before you deploy your contract, activate the optimizer when compiling using ``solc --optimize --bin sourceFile.sol``. By default, the optimizer will optimize the contract assuming it is called 200 times across its lifetime (more specifically, it assumes each opcode is executed around 200 times). If you want the initial contract deployment to be cheaper and the later function executions to be more expensive, set it to ``--optimize-runs=1``. If you expect many transactions and do not care for higher deployment cost and output size, set ``--optimize-runs`` to a high number. This parameter has effects on the following (this might change in the future):"
msgstr ""

#: ../../using-the-compiler.rst:33 92bb10a77221403cbfa1540d4dc5b4c3
msgid "the size of the binary search in the function dispatch routine"
msgstr ""

#: ../../using-the-compiler.rst:34 ab6159ba20f44dd89be81f4b4c805a9b
msgid "the way constants like large numbers or strings are stored"
msgstr ""

#: ../../using-the-compiler.rst:39 01093adc4a744627a2ff6d9ede7799f4
msgid "Base Path and Import Remapping"
msgstr ""

#: ../../using-the-compiler.rst:41 ec912ffde5cc4f81a38972bd131d2564
msgid "The commandline compiler will automatically read imported files from the filesystem, but it is also possible to provide :ref:`path redirects <import-remapping>` using ``prefix=path`` in the following way:"
msgstr ""

#: ../../using-the-compiler.rst:48 937a031d76724203a1a694095b2a6fd8
msgid "This essentially instructs the compiler to search for anything starting with ``github.com/ethereum/dapp-bin/`` under ``/usr/local/lib/dapp-bin``."
msgstr ""

#: ../../using-the-compiler.rst:51 396ef3061b35494ab2e1f5b5d57a8108
msgid "When accessing the filesystem to search for imports, :ref:`paths that do not start with ./ or ../ <direct-imports>` are treated as relative to the directories specified using ``--base-path`` and ``--include-path`` options (or the current working directory if base path is not specified). Furthermore, the part of the path added via these options will not appear in the contract metadata."
msgstr ""

#: ../../using-the-compiler.rst:56 48021561d0724a0093170962e49d7d01
msgid "For security reasons the compiler has :ref:`restrictions on what directories it can access <allowed-paths>`. Directories of source files specified on the command line and target paths of remappings are automatically allowed to be accessed by the file reader, but everything else is rejected by default. Additional paths (and their subdirectories) can be allowed via the ``--allow-paths /sample/path,/another/sample/path`` switch. Everything inside the path specified via ``--base-path`` is always allowed."
msgstr ""

#: ../../using-the-compiler.rst:64 536fd3a8bd55452385e0ef91c91833c7
msgid "The above is only a simplification of how the compiler handles import paths. For a detailed explanation with examples and discussion of corner cases please refer to the section on :ref:`path resolution <path-resolution>`."
msgstr ""

#: ../../using-the-compiler.rst:72 b7ffa10f61bc477abaffeb029612de9a
msgid "Library Linking"
msgstr ""

#: ../../using-the-compiler.rst:74 b7a2b267d41f4efb9929f2ee2e678ec1
msgid "If your contracts use :ref:`libraries <libraries>`, you will notice that the bytecode contains substrings of the form ``__$53aea86b7d70b31448b230b20ae141a537$__``. These are placeholders for the actual library addresses. The placeholder is a 34 character prefix of the hex encoding of the keccak256 hash of the fully qualified library name. The bytecode file will also contain lines of the form ``// <placeholder> -> <fq library name>`` at the end to help identify which libraries the placeholders represent. Note that the fully qualified library name is the path of its source file and the library name separated by ``:``. You can use ``solc`` as a linker meaning that it will insert the library addresses for you at those points:"
msgstr ""

#: ../../using-the-compiler.rst:81 82bfd755e1c54078bd80589d31ba7cc3
msgid "Either add ``--libraries \"file.sol:Math=0x1234567890123456789012345678901234567890 file.sol:Heap=0xabCD567890123456789012345678901234567890\"`` to your command to provide an address for each library (use commas or spaces as separators) or store the string in a file (one library per line) and run ``solc`` using ``--libraries fileName``."
msgstr ""

#: ../../using-the-compiler.rst:84 721912b76f2949db9c5f552d307c78de
msgid "Starting Solidity 0.8.1 accepts ``=`` as separator between library and address, and ``:`` as a separator is deprecated. It will be removed in the future. Currently ``--libraries \"file.sol:Math:0x1234567890123456789012345678901234567890 file.sol:Heap:0xabCD567890123456789012345678901234567890\"`` will work too."
msgstr ""

#: ../../using-the-compiler.rst:88 41e2998dc93643cbb20a22167ceca6ef
msgid "If ``solc`` is called with the option ``--standard-json``, it will expect a JSON input (as explained below) on the standard input, and return a JSON output on the standard output. This is the recommended interface for more complex and especially automated uses. The process will always terminate in a \"success\" state and report any errors via the JSON output. The option ``--base-path`` is also processed in standard-json mode."
msgstr ""

#: ../../using-the-compiler.rst:91 3f2f5f1b75c24eca8deeb40c844d195a
msgid "If ``solc`` is called with the option ``--link``, all input files are interpreted to be unlinked binaries (hex-encoded) in the ``__$53aea86b7d70b31448b230b20ae141a537$__``-format given above and are linked in-place (if the input is read from stdin, it is written to stdout). All options except ``--libraries`` are ignored (including ``-o``) in this case."
msgstr ""

#: ../../using-the-compiler.rst:94 e9d7e327b14e4ac39273ae9c214a1048
msgid "Manually linking libraries on the generated bytecode is discouraged because it does not update contract metadata. Since metadata contains a list of libraries specified at the time of compilation and bytecode contains a metadata hash, you will get different binaries, depending on when linking is performed."
msgstr ""

#: ../../using-the-compiler.rst:99 b87a80aa05804c6c8231c7f043c48681
msgid "You should ask the compiler to link the libraries at the time a contract is compiled by either using the ``--libraries`` option of ``solc`` or the ``libraries`` key if you use the standard-JSON interface to the compiler."
msgstr ""

#: ../../using-the-compiler.rst:104 a3ecb51ed5c14077bc8f9a8f23268687
msgid "The library placeholder used to be the fully qualified name of the library itself instead of the hash of it. This format is still supported by ``solc --link`` but the compiler will no longer output it. This change was made to reduce the likelihood of a collision between libraries, since only the first 36 characters of the fully qualified library name could be used."
msgstr ""

#: ../../using-the-compiler.rst:114 6fe612b7139345a98b034b61acac4712
msgid "Setting the EVM Version to Target"
msgstr ""

#: ../../using-the-compiler.rst:116 cf1f44b0d61e4b9a9efb2dcdd66d6d66
msgid "When you compile your contract code you can specify the Ethereum virtual machine version to compile for to avoid particular features or behaviours."
msgstr ""

#: ../../using-the-compiler.rst:121 83afa1ab41fc4af782d03e2db84d8ade
msgid "Compiling for the wrong EVM version can result in wrong, strange and failing behaviour. Please ensure, especially if running a private chain, that you use matching EVM versions."
msgstr ""

#: ../../using-the-compiler.rst:125 017338cd9116467fa381b0039a94c838
msgid "On the command line, you can select the EVM version as follows:"
msgstr ""

#: ../../using-the-compiler.rst:131 e89927df16044498b97037c8f4048eb1
msgid "In the :ref:`standard JSON interface <compiler-api>`, use the ``\"evmVersion\"`` key in the ``\"settings\"`` field:"
msgstr ""

#: ../../using-the-compiler.rst:145 82663b253e054280974bc8b8b0c5e205
msgid "Target Options"
msgstr ""

#: ../../using-the-compiler.rst:147 1fb5c49596f94c25a68a936b35e14c48
msgid "Below is a list of target EVM versions and the compiler-relevant changes introduced at each version. Backward compatibility is not guaranteed between each version."
msgstr ""

#: ../../using-the-compiler.rst:150 9003d08f24c94dfbbfec41833623486b
msgid "``homestead``"
msgstr ""

#: ../../using-the-compiler.rst:151 c571901fe0ee4f79b7394adb1dcd205b
msgid "(oldest version)"
msgstr ""

#: ../../using-the-compiler.rst:153 1089500cbc3540b49cfc6bae33c62aca
msgid "``tangerineWhistle``"
msgstr ""

#: ../../using-the-compiler.rst:153 f02818331e0044308c255c184e312db0
msgid "Gas cost for access to other accounts increased, relevant for gas estimation and the optimizer."
msgstr ""

#: ../../using-the-compiler.rst:154 7c66cdce250c45d5ab16d9ddf777a662
msgid "All gas sent by default for external calls, previously a certain amount had to be retained."
msgstr ""

#: ../../using-the-compiler.rst:155 5203f9b09e614ef19e64fdfe2227a87e
msgid "``spuriousDragon``"
msgstr ""

#: ../../using-the-compiler.rst:156 dbb2ad3d31e34f87bbfe8e39398f1ffe
msgid "Gas cost for the ``exp`` opcode increased, relevant for gas estimation and the optimizer."
msgstr ""

#: ../../using-the-compiler.rst:160 647788d89c74475aa6ca71a3f443ae11
msgid "``byzantium``"
msgstr ""

#: ../../using-the-compiler.rst:158 7c46026bc599410991e8d1c5742d4a83
msgid "Opcodes ``returndatacopy``, ``returndatasize`` and ``staticcall`` are available in assembly."
msgstr ""

#: ../../using-the-compiler.rst:159 c0ad23a830a347adb6ab9cee3bc5c463
msgid "The ``staticcall`` opcode is used when calling non-library view or pure functions, which prevents the functions from modifying state at the EVM level, i.e., even applies when you use invalid type conversions."
msgstr ""

#: ../../using-the-compiler.rst:160 e853328546c54f4092b29daec5670848
msgid "It is possible to access dynamic data returned from function calls."
msgstr ""

#: ../../using-the-compiler.rst:161 4f82bc6e639347b9ac26582cfa345167
msgid "``revert`` opcode introduced, which means that ``revert()`` will not waste gas."
msgstr ""

#: ../../using-the-compiler.rst:163 fe4c4d57ea7548cda7f81a9b970e9755
msgid "``constantinople``"
msgstr ""

#: ../../using-the-compiler.rst:163 730320df64624d73a3d1396a92221b11
msgid "Opcodes ``create2`, ``extcodehash``, ``shl``, ``shr`` and ``sar`` are available in assembly."
msgstr ""

#: ../../using-the-compiler.rst:164 f7b06ff098cc4c9e9700d2e4f86ada1f
msgid "Shifting operators use shifting opcodes and thus need less gas."
msgstr ""

#: ../../using-the-compiler.rst:165 43197d663eb9418c9bb41dd5c447d55a
msgid "``petersburg``"
msgstr ""

#: ../../using-the-compiler.rst:166 771743f98c52455e96ebbebb4eaf4a43
msgid "The compiler behaves the same way as with constantinople."
msgstr ""

#: ../../using-the-compiler.rst:167 b1af8f404ff84c7e9a8ef356c54128a2
msgid "``istanbul``"
msgstr ""

#: ../../using-the-compiler.rst:168 2eb4091f999a41beae7571831841265e
msgid "Opcodes ``chainid`` and ``selfbalance`` are available in assembly."
msgstr ""

#: ../../using-the-compiler.rst:171 ba5bf1a57b2549fe82a07c3feccb5685
msgid "``berlin``"
msgstr ""

#: ../../using-the-compiler.rst:170 441e45c9ecae4504a87748a9bd0892ef
msgid "Gas costs for ``SLOAD``, ``*CALL``, ``BALANCE``, ``EXT*`` and ``SELFDESTRUCT`` increased. The compiler assumes cold gas costs for such operations. This is relevant for gas estimation and the optimizer."
msgstr ""

#: ../../using-the-compiler.rst:175 c2a624643c9842479142983e53b3dc22
msgid "``london`` (**default**)"
msgstr ""

#: ../../using-the-compiler.rst:174 75b05fd69947493d86102b2d28b0c507
msgid "The block's base fee (`EIP-3198 <https://eips.ethereum.org/EIPS/eip-3198>`_ and `EIP-1559 <https://eips.ethereum.org/EIPS/eip-1559>`_) can be accessed via the global ``block.basefee`` or ``basefee()`` in inline assembly."
msgstr ""

#: ../../using-the-compiler.rst:181 d33a9270e21c4e10820cafc44c5d682c
msgid "Compiler Input and Output JSON Description"
msgstr ""

#: ../../using-the-compiler.rst:183 8404d072f3cf4bc1bf1d0e01f9451557
msgid "The recommended way to interface with the Solidity compiler especially for more complex and automated setups is the so-called JSON-input-output interface. The same interface is provided by all distributions of the compiler."
msgstr ""

#: ../../using-the-compiler.rst:187 cd1749a9f6ef4edcb4532814a93bf426
msgid "The fields are generally subject to change, some are optional (as noted), but we try to only make backwards compatible changes."
msgstr ""

#: ../../using-the-compiler.rst:190 37f859b34f904a02a2d01f8e114969c1
msgid "The compiler API expects a JSON formatted input and outputs the compilation result in a JSON formatted output. The standard error output is not used and the process will always terminate in a \"success\" state, even if there were errors. Errors are always reported as part of the JSON output."
msgstr ""

#: ../../using-the-compiler.rst:194 373abc29b2c84da981787d7267cd526b
msgid "The following subsections describe the format through an example. Comments are of course not permitted and used here only for explanatory purposes."
msgstr ""

#: ../../using-the-compiler.rst:198 6672e2deb8a8467a962b76279850bb75
msgid "Input Description"
msgstr ""

#: ../../using-the-compiler.rst:445 13ba8a466fe2405db6cdf16e1630e153
msgid "Output Description"
msgstr ""

#: ../../using-the-compiler.rst:602 2ff895d7b8374a4d85ee0c8859c3c638
msgid "Error Types"
msgstr ""

#: ../../using-the-compiler.rst:604 dfee147bf8f34f668413051765029c37
msgid "``JSONError``: JSON input doesn't conform to the required format, e.g. input is not a JSON object, the language is not supported, etc."
msgstr ""

#: ../../using-the-compiler.rst:605 b1485a24a27f4c789e2c92e8dc6902ca
msgid "``IOError``: IO and import processing errors, such as unresolvable URL or hash mismatch in supplied sources."
msgstr ""

#: ../../using-the-compiler.rst:606 48bb215d57cf4f4a96110e91d9e2e6e1
msgid "``ParserError``: Source code doesn't conform to the language rules."
msgstr ""

#: ../../using-the-compiler.rst:607 817aa99643db4871b521c31067434ad2
msgid "``DocstringParsingError``: The NatSpec tags in the comment block cannot be parsed."
msgstr ""

#: ../../using-the-compiler.rst:608 1c1d131b5c3449ae9ddbd899c123b37d
msgid "``SyntaxError``: Syntactical error, such as ``continue`` is used outside of a ``for`` loop."
msgstr ""

#: ../../using-the-compiler.rst:609 ef83c1939a774f868c1d410d51bf4044
msgid "``DeclarationError``: Invalid, unresolvable or clashing identifier names. e.g. ``Identifier not found``"
msgstr ""

#: ../../using-the-compiler.rst:610 ed1975a2023d42cabbedae5ebcc4cf0f
msgid "``TypeError``: Error within the type system, such as invalid type conversions, invalid assignments, etc."
msgstr ""

#: ../../using-the-compiler.rst:611 b5329df5815c4124b2d5b86a4524f0d9
msgid "``UnimplementedFeatureError``: Feature is not supported by the compiler, but is expected to be supported in future versions."
msgstr ""

#: ../../using-the-compiler.rst:612 a6721a3e32c942feb075213df4195158
msgid "``InternalCompilerError``: Internal bug triggered in the compiler - this should be reported as an issue."
msgstr ""

#: ../../using-the-compiler.rst:613 5323081cd94d4229b893c72bdb98a381
msgid "``Exception``: Unknown failure during compilation - this should be reported as an issue."
msgstr ""

#: ../../using-the-compiler.rst:614 060b4aba41a644aebd02b57ee2b83c42
msgid "``CompilerError``: Invalid use of the compiler stack - this should be reported as an issue."
msgstr ""

#: ../../using-the-compiler.rst:615 54c2c0acb9bc42a882793ec3927c1d4f
msgid "``FatalError``: Fatal error not processed correctly - this should be reported as an issue."
msgstr ""

#: ../../using-the-compiler.rst:616 c99b7f789d324011bb443ba10d2ae5b8
msgid "``Warning``: A warning, which didn't stop the compilation, but should be addressed if possible."
msgstr ""

#: ../../using-the-compiler.rst:617 8f2bbd59f6254585aaf28c47640bc329
msgid "``Info``: Information that the compiler thinks the user might find useful, but is not dangerous and does not necessarily need to be addressed."
msgstr ""

#: ../../using-the-compiler.rst:623 da633f60840a4539814adc5cdbbcccef
msgid "Compiler Tools"
msgstr ""

#: ../../using-the-compiler.rst:626 2fe2ee45d6e24cc7adb43907303d4d36
msgid "solidity-upgrade"
msgstr ""

#: ../../using-the-compiler.rst:628 45d10861d1e74b9898d2e5db9ccc30a6
msgid "``solidity-upgrade`` can help you to semi-automatically upgrade your contracts to breaking language changes. While it does not and cannot implement all required changes for every breaking release, it still supports the ones, that would need plenty of repetitive manual adjustments otherwise."
msgstr ""

#: ../../using-the-compiler.rst:635 1b6eebe453fe4bdfbb1590511df53c51
msgid "``solidity-upgrade`` carries out a large part of the work, but your contracts will most likely need further manual adjustments. We recommend using a version control system for your files. This helps reviewing and eventually rolling back the changes made."
msgstr ""

#: ../../using-the-compiler.rst:642 9e0d216727e14502986ac16f3bdf1138
msgid "``solidity-upgrade`` is not considered to be complete or free from bugs, so please use with care."
msgstr ""

#: ../../using-the-compiler.rst:646 e0dbf5cab9d649faa03ad6f092ef97e5
msgid "How it Works"
msgstr ""

#: ../../using-the-compiler.rst:648 3ca7ab7e2e1d46e787ffbf5d3869f4f3
msgid "You can pass (a) Solidity source file(s) to ``solidity-upgrade [files]``. If these make use of ``import`` statement which refer to files outside the current source file's directory, you need to specify directories that are allowed to read and import files from, by passing ``--allow-paths [directory]``. You can ignore missing files by passing ``--ignore-missing``."
msgstr ""

#: ../../using-the-compiler.rst:655 2615fa909e08453eb02fc885e442dc7a
msgid "``solidity-upgrade`` is based on ``libsolidity`` and can parse, compile and analyse your source files, and might find applicable source upgrades in them."
msgstr ""

#: ../../using-the-compiler.rst:658 fc842a9a21f0410b9c8e14c6f036c4a8
msgid "Source upgrades are considered to be small textual changes to your source code. They are applied to an in-memory representation of the source files given. The corresponding source file is updated by default, but you can pass ``--dry-run`` to simulate to whole upgrade process without writing to any file."
msgstr ""

#: ../../using-the-compiler.rst:663 3e43550c4f374a639bb7d3b73343d5c9
msgid "The upgrade process itself has two phases. In the first phase source files are parsed, and since it is not possible to upgrade source code on that level, errors are collected and can be logged by passing ``--verbose``. No source upgrades available at this point."
msgstr ""

#: ../../using-the-compiler.rst:668 dc539cd6ef53498dba905a78cc1e7763
msgid "In the second phase, all sources are compiled and all activated upgrade analysis modules are run alongside compilation. By default, all available modules are activated. Please read the documentation on :ref:`available modules <upgrade-modules>` for further details."
msgstr ""

#: ../../using-the-compiler.rst:674 9ec9aaea02dd4713928f88c593167029
msgid "This can result in compilation errors that may be fixed by source upgrades. If no errors occur, no source upgrades are being reported and you're done. If errors occur and some upgrade module reported a source upgrade, the first reported one gets applied and compilation is triggered again for all given source files. The previous step is repeated as long as source upgrades are reported. If errors still occur, you can log them by passing ``--verbose``. If no errors occur, your contracts are up to date and can be compiled with the latest version of the compiler."
msgstr ""

#: ../../using-the-compiler.rst:687 99bfbc6bcc324b28bcedc16cebde58f4
msgid "Available Upgrade Modules"
msgstr ""

#: ../../using-the-compiler.rst:690 8b3ed887626c4b1db5685434f62b288e
msgid "Module"
msgstr ""

#: ../../using-the-compiler.rst:690 60e5387d187a4dd7b4c777764c7f5ce7
msgid "Version"
msgstr ""

#: ../../using-the-compiler.rst:690 db3b5396568445e5bd791b5778fe7358
msgid "Description"
msgstr ""

#: ../../using-the-compiler.rst:692 539b933237054f18a0de7b675121c3ab
msgid "``constructor``"
msgstr ""

#: ../../using-the-compiler.rst:692 ../../using-the-compiler.rst:695
#: 161bf28819484d43b81da0cb7085a884 80cca4895b0b47589b54b046879c2670
msgid "0.5.0"
msgstr ""

#: ../../using-the-compiler.rst:692 5b4ee914c7f64bf9911bf6a30ca7fb82
msgid "Constructors must now be defined using the ``constructor`` keyword."
msgstr ""

#: ../../using-the-compiler.rst:695 564f382451834733b454737e5763a46f
msgid "``visibility``"
msgstr ""

#: ../../using-the-compiler.rst:695 740ce61d1ad84c3dabaa39c557ca7d21
msgid "Explicit function visibility is now mandatory, defaults to ``public``."
msgstr ""

#: ../../using-the-compiler.rst:698 9a9c787fe0804892b811d558e1e54956
msgid "``abstract``"
msgstr ""

#: ../../using-the-compiler.rst:698 ../../using-the-compiler.rst:701
#: ../../using-the-compiler.rst:704 7f297a82cffa44dbaa3ea4b27e6e9d29
#: 8ebeda7d159f421a835fa40729ca86d9 b576c3d7b62c475ea84b7a73df46f6c7
msgid "0.6.0"
msgstr ""

#: ../../using-the-compiler.rst:698 97d24cde23544e668e84ab2c5a9b49c3
msgid "The keyword ``abstract`` has to be used if a contract does not implement all its functions."
msgstr ""

#: ../../using-the-compiler.rst:701 82250fb9a14a497d90b524e6adb1232a
msgid "``virtual``"
msgstr ""

#: ../../using-the-compiler.rst:701 510c50573aca490c87a11715c30e20a5
msgid "Functions without implementation outside an interface have to be marked ``virtual``."
msgstr ""

#: ../../using-the-compiler.rst:704 ea454c2b862b421495c9662717b83d1c
msgid "``override``"
msgstr ""

#: ../../using-the-compiler.rst:704 07a06d4e9ddc4d14816b22efdf87a7f8
msgid "When overriding a function or modifier, the new keyword ``override`` must be used."
msgstr ""

#: ../../using-the-compiler.rst:707 53865486c81941e19dc9f0339bdd8f65
msgid "``dotsyntax``"
msgstr ""

#: ../../using-the-compiler.rst:707 ../../using-the-compiler.rst:713
#: ../../using-the-compiler.rst:716 5642db299bb34f97ad2c103a16963477
#: 7968f1bfea864c4887094dcf48e584fd a298e8fce462440f8d24a8d3ccfc72cd
msgid "0.7.0"
msgstr ""

#: ../../using-the-compiler.rst:707 44792eaab2ee4a07a5bd16cdebd6af10
msgid "The following syntax is deprecated: ``f.gas(...)()``, ``f.value(...)()`` and ``(new C).value(...)()``. Replace these calls by ``f{gas: ..., value: ...}()`` and ``(new C){value: ...}()``."
msgstr ""

#: ../../using-the-compiler.rst:713 36afc69818044f5ab07f299424209746
msgid "``now``"
msgstr ""

#: ../../using-the-compiler.rst:713 cab3e903776349f5a4181a384f8fa77b
msgid "The ``now`` keyword is deprecated. Use ``block.timestamp`` instead."
msgstr ""

#: ../../using-the-compiler.rst:716 562ccc923eab45f687d8a62d01ae8104
msgid "``constructor-visibility``"
msgstr ""

#: ../../using-the-compiler.rst:716 8f21c19f4d704ce2ba5b0296a28c1dcd
msgid "Removes visibility of constructors."
msgstr ""

#: ../../using-the-compiler.rst:720 6560435576e04d5580539d92fa0dd05d
msgid "Please read :doc:`0.5.0 release notes <050-breaking-changes>`, :doc:`0.6.0 release notes <060-breaking-changes>`, :doc:`0.7.0 release notes <070-breaking-changes>` and :doc:`0.8.0 release notes <080-breaking-changes>` for further details."
msgstr ""

#: ../../using-the-compiler.rst:725 fb37fe38fbfe42c895874a9c64d1e6d4
msgid "Synopsis"
msgstr ""

#: ../../using-the-compiler.rst:749 c20d35ff7c7f459f9478c544544a0279
msgid "Bug Reports / Feature Requests"
msgstr ""

#: ../../using-the-compiler.rst:751 b9184a7c47d0452693aa76ce74d2885b
msgid "If you found a bug or if you have a feature request, please `file an issue <https://github.com/ethereum/solidity/issues/new/choose>`_ on Github."
msgstr ""

#: ../../using-the-compiler.rst:756 aebf2446982d41aa9cb47700a8741593
msgid "Example"
msgstr ""

#: ../../using-the-compiler.rst:758 37d95217232c4f4384ac00cf43a86e0c
msgid "Assume that you have the following contract in ``Source.sol``:"
msgstr ""

#: ../../using-the-compiler.rst:794 4a26817b9b19486699ede4c4ca1378c7
msgid "Required Changes"
msgstr ""

#: ../../using-the-compiler.rst:796 f3e075766b9b41149b57e83e29211c63
msgid "The above contract will not compile starting from 0.7.0. To bring the contract up to date with the current Solidity version, the following upgrade modules have to be executed: ``constructor-visibility``, ``now`` and ``dotsyntax``. Please read the documentation on :ref:`available modules <upgrade-modules>` for further details."
msgstr ""

#: ../../using-the-compiler.rst:803 9a40c870d6fa42c9988c4ed63ec6efd0
msgid "Running the Upgrade"
msgstr ""

#: ../../using-the-compiler.rst:805 052f3aeca0e740a9a77fc76a9aef8629
msgid "It is recommended to explicitly specify the upgrade modules by using ``--modules`` argument."
msgstr ""

#: ../../using-the-compiler.rst:811 e8107c02461f41698e9a336c137ca2a9
msgid "The command above applies all changes as shown below. Please review them carefully (the pragmas will have to be updated manually.)"
msgstr ""

