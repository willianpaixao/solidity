# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2021, Ethereum
# This file is distributed under the same license as the Solidity package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Solidity 0.8.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-13 16:47+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../internals/layout_in_memory.rst:6 b45e25aeb53a4f038ef294277e3491ec
msgid "Layout in Memory"
msgstr ""

#: ../../internals/layout_in_memory.rst:8 aed0c5a05a9e4c289e382282488a98fa
msgid ""
"Solidity reserves four 32-byte slots, with specific byte ranges "
"(inclusive of endpoints) being used as follows:"
msgstr ""

#: ../../internals/layout_in_memory.rst:10 d71c7dd32c4b49ac93755bac4a0d70ad
msgid "``0x00`` - ``0x3f`` (64 bytes): scratch space for hashing methods"
msgstr ""

#: ../../internals/layout_in_memory.rst:11 138ef7fd5fe149ccbd2d10676c9a93c1
msgid ""
"``0x40`` - ``0x5f`` (32 bytes): currently allocated memory size (aka. "
"free memory pointer)"
msgstr ""

#: ../../internals/layout_in_memory.rst:12 6c60755b21694da6bd002e0cf9a63407
msgid "``0x60`` - ``0x7f`` (32 bytes): zero slot"
msgstr ""

#: ../../internals/layout_in_memory.rst:14 55282757d5654b95991b673e51b8dc0e
msgid ""
"Scratch space can be used between statements (i.e. within inline "
"assembly). The zero slot is used as initial value for dynamic memory "
"arrays and should never be written to (the free memory pointer points to "
"``0x80`` initially)."
msgstr ""

#: ../../internals/layout_in_memory.rst:18 e500e430da6440f1bc19ba9f6083bce4
msgid ""
"Solidity always places new objects at the free memory pointer and memory "
"is never freed (this might change in the future)."
msgstr ""

#: ../../internals/layout_in_memory.rst:21 0aa6468abfa04f32bf05b909cc94b7a9
msgid ""
"Elements in memory arrays in Solidity always occupy multiples of 32 bytes"
" (this is even true for ``bytes1[]``, but not for ``bytes`` and "
"``string``). Multi-dimensional memory arrays are pointers to memory "
"arrays. The length of a dynamic array is stored at the first slot of the "
"array and followed by the array elements."
msgstr ""

#: ../../internals/layout_in_memory.rst:28 10825ba2c06a4096a907193f793e53f4
msgid ""
"There are some operations in Solidity that need a temporary memory area "
"larger than 64 bytes and therefore will not fit into the scratch space. "
"They will be placed where the free memory points to, but given their "
"short lifetime, the pointer is not updated. The memory may or may not be "
"zeroed out. Because of this, one should not expect the free memory to "
"point to zeroed out memory."
msgstr ""

#: ../../internals/layout_in_memory.rst:35 92e1a5f7246b489b9f7f240b3eff9ccb
msgid ""
"While it may seem like a good idea to use ``msize`` to arrive at a "
"definitely zeroed out memory area, using such a pointer non-temporarily "
"without updating the free memory pointer can have unexpected results."
msgstr ""

#: ../../internals/layout_in_memory.rst:41 eb0927d23792426b9a07de9c2c481f12
msgid "Differences to Layout in Storage"
msgstr ""

#: ../../internals/layout_in_memory.rst:43 5b5eee28f0264972af67c07128f9041d
msgid ""
"As described above the layout in memory is different from the layout in "
":ref:`storage<storage-inplace-encoding>`. Below there are some examples."
msgstr ""

#: ../../internals/layout_in_memory.rst:47 1d3ee218d2d84b28be2a264ae3f6db79
msgid "Example for Difference in Arrays"
msgstr ""

#: ../../internals/layout_in_memory.rst:49 16e6392818c5452e807dee5901509d86
msgid ""
"The following array occupies 32 bytes (1 slot) in storage, but 128 bytes "
"(4 items with 32 bytes each) in memory."
msgstr ""

#: ../../internals/layout_in_memory.rst:59 c8834df76b9745148b0f0f23b917e6c4
msgid "Example for Difference in Struct Layout"
msgstr ""

#: ../../internals/layout_in_memory.rst:61 03e7330dbee74893b51f7cb1f5ecfcc3
msgid ""
"The following struct occupies 96 bytes (3 slots of 32 bytes) in storage, "
"but 128 bytes (4 items with 32 bytes each) in memory."
msgstr ""

